{
  "Blank 2.0": {
    "prefix": "n2bl",
    "body": [
      "define([],",
      "    function () {",
      "",
      "        return {",
      "",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Blank script v2.0"
  },
  "Bundle Installation 2.0": {
    "prefix": "n2bu",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType BundleInstallationScript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Executes before a bundle is installed for the first time in a target account.",
      "         *",
      "         * @param {object} params",
      "         * @param {number} params.version - Version of the bundle being installed",
      "         */",
      "        function beforeInstall (params) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes after a bundle is installed for the first time in a target account.",
      "         *",
      "         * @param {object} params",
      "         * @param {number} params.version - Version of the bundle being installed",
      "         */",
      "        function afterInstall (params) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes before a bundle in a target account is updated.",
      "         *",
      "         * @param {object} params",
      "         * @param {number} params.fromVersion - Version currently installed",
      "         * @param {number} params.toVersion -  New version of the bundle being installed",
      "         */",
      "        function beforeUpdate (params) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes after a bundle in a target account is updated.",
      "         *",
      "         * @param {object} params",
      "         * @param {number} params.fromVersion - Version currently installed",
      "         * @param {number} params.toVersion -  New version of the bundle being installed",
      "         */",
      "        function afterUpdate (params) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes before a bundle is uninstalled from a target account.",
      "         *",
      "         * @param {object} params",
      "         * @param {number} params.version - Version of the bundle being installed",
      "         */",
      "        function beforeUninstall (params) {",
      "",
      "        }",
      "",
      "        return {",
      "            'beforeInstall': beforeInstall,",
      "            'afterInstall': afterInstall,",
      "            'beforeUpdate': beforeUpdate,",
      "            'afterUpdate': afterUpdate,",
      "            'beforeUninstall': beforeUninstall",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Bundle Installation script v2.0"
  },
  "Client 2.0": {
    "prefix": "n2cl",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType ClientScript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Function to be executed after page is initialized.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.mode - The mode in which the record is being accessed (create, copy, or edit)",
      "         */",
      "        function pageInit (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function to be executed when field is changed.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @param {string} context.fieldId - Field name",
      "         * @param {number} context.lineNum - Line number. Will be undefined if not a sublist or matrix field",
      "         * @param {number} context.columnNum - Line number. Will be undefined if not a matrix field",
      "         */",
      "        function fieldChanged (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function to be executed when field is slaved.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @param {string} context.fieldId - Field name",
      "         */",
      "        function postSourcing (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function to be executed after sublist is inserted, removed, or edited.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         */",
      "        function sublistChanged (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function to be executed after line is selected.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         */",
      "        function lineInit (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Validation function to be executed when field is changed.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @param {string} context.fieldId - Field name",
      "         * @param {number} context.lineNum - Line number. Will be undefined if not a sublist or matrix field",
      "         * @param {number} context.columnNum - Line number. Will be undefined if not a matrix field",
      "         * @returns {boolean} Return true if field is valid",
      "         */",
      "        function validateField (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         *  Validation function to be executed when sublist line is committed.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @returns {boolean} Return true if sublist line is valid",
      "         */",
      "        function validateLine (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Validation function to be executed when sublist line is inserted.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @returns {boolean} Return true if sublist line is valid",
      "         */",
      "        function validateInsert (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Validation function to be executed when record is deleted.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @param {string} context.sublistId - Sublist name",
      "         * @returns {boolean} Return true if sublist line is valid",
      "         */",
      "        function validateDelete (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Validation function to be executed when record is saved.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.currentRecord - Current form record",
      "         * @returns {boolean} Return true if record is valid",
      "         */",
      "        function saveRecord (context) {",
      "",
      "        }",
      "",
      "        return {",
      "            'each': each",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Client script v2.0"
  },
  "Custom Plugin 2.0": {
    "prefix": "n2pl",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType plugintypeimpl",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        return {",
      "",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Custom Plugin script v2.0"
  },
  "Map/Reduce 2.0": {
    "prefix": "n2mr",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType MapReduceScript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Marks the beginning of the Map/Reduce process and generates input data.",
      "         *",
      "         * @param {object} context",
      "         * @param {boolean} context.isRestarted",
      "         * @param {object} context.ObjectRef",
      "         * @param {number} context.ObjectRef.id - Internal ID of the record instance",
      "         * @param {string} context.ObjectRef.type - Record type id",
      "         * @returns {Array|Object|Search|RecordRef} inputSummary",
      "         */",
      "        function getInputData (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes when the map entry point is triggered and applies to each key/value pair.",
      "         *",
      "         * @param {object} context - Data collection containing the key/value pairs to process through the map stage",
      "         */",
      "        function map (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes when the reduce entry point is triggered and applies to each group.",
      "         *",
      "         * @param {object} context - Data collection containing the groups to process through the reduce stage",
      "         */",
      "        function reduce (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Executes when the summarize entry point is triggered and applies to the result set.",
      "         *",
      "         * @param {object} context - Holds statistics regarding the execution of a map/reduce script",
      "         */",
      "        function summarize (context) {",
      "",
      "        }",
      "",
      "        return {",
      "            'getInputData': getInputData,",
      "            'map': map,",
      "            'reduce': reduce,",
      "            'summarize': summarize",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Map/Reduce script v2.0"
  },
  "Mass Update 2.0": {
    "prefix": "n2mu",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType MassUpdateScript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Definition of the Mass Update script trigger point.",
      "         *",
      "         * @param {object} params",
      "         * @param {string} params.type - Record type of the record being processed by the mass update",
      "         * @param {number} params.id - ID of the record being processed by the mass update",
      "         */",
      "        function each (params) {",
      "",
      "        }",
      "",
      "        return {",
      "            'each': each",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Mass Update script v2.0"
  },
  "Portlet 2.0": {
    "prefix": "n2po",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType Portlet",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Definition of the Portlet script trigger point.",
      "         *",
      "         * @param {object} params",
      "         * @param {Portlet} params.portlet - The portlet object used for rendering",
      "         * @param {number} params.column - Specifies whether portlet is placed in left (1), center (2) or right (3) column of the dashboard",
      "         * @param {string} params.entity - (For custom portlets only) references the customer ID for the selected customer",
      "         */",
      "        function render (params) {",
      "",
      "        }",
      "",
      "        return {",
      "            'render': render",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Scheduled script v2.0"
  },
  "RESTlet 2.0": {
    "prefix": "n2re",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType Restlet",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Function called upon sending a GET request to the RESTlet.",
      "         *",
      "         * @param {object} requestParams - Parameters from HTTP request URL",
      "         * @returns {string | object} string when 'text/plain'; Object when 'application/json",
      "         */",
      "        function doGet (requestParams) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function called upon sending a PUT request to the RESTlet.",
      "         *",
      "         * @param {string | object} requestBody - The HTTP request body; string when 'text/plain'; Object when 'application/json",
      "         * @returns {string | object} return string when 'text/plain'; return Object when 'application/json",
      "         */",
      "        function doPut (requestBody) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function called upon sending a POST request to the RESTlet.",
      "         *",
      "         * @param {string | object} requestBody - The HTTP request body; string when 'text/plain'; Object when 'application/json",
      "         * @returns {string | object} return string when 'text/plain'; return Object when 'application/json",
      "         */",
      "        function doPost (requestBody) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function called upon sending a DELETE request to the RESTlet.",
      "         *",
      "         * @param {object} requestParams - Parameters from HTTP request URL",
      "         * @returns {string | object} return string when 'text/plain'; return Object when 'application/json",
      "         */",
      "        function doGet (requestParams) {",
      "",
      "        }",
      "",
      "        return {",
      "            'get': doGet,",
      "            'put': doPut,",
      "            'post': doPost,",
      "            'delete': doDelete",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Scheduled script v2.0"
  },
  "Suitelet 2.0": {
    "prefix": "n2su",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType Suitelet",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Definition of the Suitelet script trigger point.",
      "         *",
      "         * @param {object} context",
      "         * @param {ServerRequest} context.request - Encapsulation of the incoming request",
      "         * @param {ServerResponse} context.response - Encapsulation of the Suitelet response",
      "         */",
      "        function onRequest (context) {",
      "",
      "        }",
      "",
      "        return {",
      "            'onRequest': onRequest",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Suitelet script v2.0"
  },
  "User Event 2.0": {
    "prefix": "n2us",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType UserEventScript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Function definition to be triggered before record is loaded.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.newRecord - New record",
      "         * @param {string} context.type - Trigger type",
      "         * @param {Form} context.form - Current form",
      "         */",
      "        function beforeLoad (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function definition to be triggered before record is submitted.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.newRecord - New record",
      "         * @param {Record} context.oldRecord - Old record",
      "         * @param {string} context.type - Trigger type",
      "         */",
      "        function beforeSubmit (context) {",
      "",
      "        }",
      "",
      "        /**",
      "         * Function definition to be triggered after record is submitted.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.newRecord - New record",
      "         * @param {Record} context.oldRecord - Old record",
      "         * @param {string} context.type - Trigger type",
      "         */",
      "        function afterSubmit (context) {",
      "",
      "        }",
      "",
      "        return {",
      "            'beforeLoad': beforeLoad,",
      "            'beforeSubmit': beforeSubmit,",
      "            'afterSubmit': afterSubmit",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a User Event script v2.0"
  },
  "Workflow Action 2.0": {
    "prefix": "n2wo",
    "body": [
      "/**",
      " * @NApiVersion 2.x",
      " * @NScriptType workflowactionscript",
      " * @NModuleScope SameAccount",
      " */",
      "define([],",
      "    function () {",
      "",
      "        /**",
      "         * Definition of the Workflow Action script trigger point.",
      "         *",
      "         * @param {object} context",
      "         * @param {Record} context.newRecord - New record",
      "         * @param {Record} context.oldRecord - Old record",
      "         */",
      "        function onAction (context) {",
      "",
      "        }",
      "",
      "        return {",
      "            'onAction': onAction",
      "        };",
      "",
      "    });",
      ""
    ],
    "description": "Create a Worflow Action script v2.0"
  }
}